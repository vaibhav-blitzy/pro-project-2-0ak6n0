apiVersion: v1
kind: Secret
metadata:
  name: api-gateway-secrets
  namespace: task-management
  labels:
    app: task-management
    component: api-gateway
    environment: production
  annotations:
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/api-gateway-key"
type: Opaque
stringData:
  admin-token: ${KONG_ADMIN_TOKEN}
  rate-limit-redis-password: ${REDIS_RATE_LIMIT_PASSWORD}
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: task-management
  labels:
    app: task-management
    component: auth-service
    environment: production
  annotations:
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/auth-service-key"
type: Opaque
stringData:
  jwt-private-key: ${JWT_PRIVATE_KEY}
  jwt-public-key: ${JWT_PUBLIC_KEY}
  session-secret: ${SESSION_SECRET}
---
apiVersion: v1
kind: Secret
metadata:
  name: task-service-secrets
  namespace: task-management
  labels:
    app: task-management
    component: task-service
    environment: production
  annotations:
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/task-service-key"
type: Opaque
stringData:
  db-password: ${TASK_DB_PASSWORD}
  redis-password: ${TASK_REDIS_PASSWORD}
---
apiVersion: v1
kind: Secret
metadata:
  name: project-service-secrets
  namespace: task-management
  labels:
    app: task-management
    component: project-service
    environment: production
  annotations:
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/project-service-key"
type: Opaque
stringData:
  db-password: ${PROJECT_DB_PASSWORD}
  redis-password: ${PROJECT_REDIS_PASSWORD}
---
apiVersion: v1
kind: Secret
metadata:
  name: notification-service-secrets
  namespace: task-management
  labels:
    app: task-management
    component: notification-service
    environment: production
  annotations:
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/notification-service-key"
type: Opaque
stringData:
  smtp-password: ${SMTP_PASSWORD}
  rabbitmq-password: ${RABBITMQ_PASSWORD}
---
apiVersion: v1
kind: Secret
metadata:
  name: search-service-secrets
  namespace: task-management
  labels:
    app: task-management
    component: search-service
    environment: production
  annotations:
    encryption.aws/kms-key: "arn:aws:kms:region:account:key/search-service-key"
type: Opaque
stringData:
  elasticsearch-password: ${ELASTICSEARCH_PASSWORD}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: task-management
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
  resourceNames: ["api-gateway-secrets", "auth-service-secrets", "task-service-secrets", 
                 "project-service-secrets", "notification-service-secrets", "search-service-secrets"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: service-secret-readers
  namespace: task-management
subjects:
- kind: ServiceAccount
  name: api-gateway
  namespace: task-management
- kind: ServiceAccount
  name: auth-service
  namespace: task-management
- kind: ServiceAccount
  name: task-service
  namespace: task-management
- kind: ServiceAccount
  name: project-service
  namespace: task-management
- kind: ServiceAccount
  name: notification-service
  namespace: task-management
- kind: ServiceAccount
  name: search-service
  namespace: task-management
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io