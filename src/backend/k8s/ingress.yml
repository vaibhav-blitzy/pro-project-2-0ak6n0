apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: task-management-ingress
  namespace: task-management
  annotations:
    # API Gateway Configuration
    kubernetes.io/ingress.class: "kong"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    konghq.com/protocols: "https"
    konghq.com/https-redirect-status-code: "301"
    konghq.com/strip-path: "true"
    konghq.com/preserve-host: "true"
    konghq.com/plugins: "rate-limiting,cors,prometheus,jwt-auth"

    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Content-Security-Policy: default-src 'self';";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";

    # Performance and Resource Configuration
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"

    # Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

    # Kong-specific Configuration
    konghq.com/override: "https-only"
    konghq.com/methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS"
    konghq.com/headers: "Accept, Authorization, Content-Type"
    konghq.com/connect-timeout: "60000"
    konghq.com/write-timeout: "60000"
    konghq.com/read-timeout: "60000"
    konghq.com/retries: "3"

spec:
  tls:
  - hosts:
    - api.taskmanagement.com
    secretName: taskmanagement-tls
  rules:
  - host: api.taskmanagement.com
    http:
      paths:
      # Authentication Service
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 3001

      # Task Service
      - path: /api/tasks
        pathType: Prefix
        backend:
          service:
            name: task-service
            port:
              number: 8080

      # Project Service
      - path: /api/projects
        pathType: Prefix
        backend:
          service:
            name: project-service
            port:
              number: 8080

      # Notification Service
      - path: /api/notifications
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 3002

      # Search Service
      - path: /api/search
        pathType: Prefix
        backend:
          service:
            name: search-service
            port:
              number: 3003