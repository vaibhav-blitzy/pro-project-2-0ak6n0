apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-service
  namespace: task-management
  labels:
    app: project-service
    component: backend
    part-of: task-management-system
    version: 1.0.0
    managed-by: kubectl
  annotations:
    kubernetes.io/change-cause: "Initial deployment"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8082"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: project-service
  template:
    metadata:
      labels:
        app: project-service
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8082"
        checksum/config: "${CONFIG_CHECKSUM}"
        co.elastic.logs/enabled: "true"
    spec:
      serviceAccountName: project-service-sa
      priorityClassName: high-priority
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - project-service
                topologyKey: kubernetes.io/hostname
      containers:
        - name: project-service
          image: task-management/project-service:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
              name: http
              protocol: TCP
            - containerPort: 8081
              name: management
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SERVER_PORT
              value: "8082"
            - name: POSTGRES_URL
              valueFrom:
                configMapKeyRef:
                  name: project-service-config
                  key: database-url
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: project-service-config
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: project-service-secrets
                  key: db-password
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: project-service-config
                  key: redis-host
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: project-service-secrets
                  key: redis-password
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: config-volume
          configMap:
            name: project-service-config
        - name: tmp-volume
          emptyDir: {}