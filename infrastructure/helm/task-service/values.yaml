# Helm values configuration for Task Service deployment
# Helm version: 3.0.0

# Override name configurations
nameOverride: ""
fullnameOverride: ""

# High availability replica configuration
replicaCount: 3

# Container image configuration
image:
  repository: taskmanager/task-service
  tag: latest
  pullPolicy: Always

# Service account configuration
serviceAccount:
  create: true
  name: task-service-sa
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789:role/task-service-role

# Pod annotations for monitoring and logging
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8083"
  fluentbit.io/parser: "spring-boot"

# Resource limits and requests as per container specifications
resources:
  limits:
    cpu: "2"
    memory: "4Gi"
  requests:
    cpu: "500m"
    memory: "1Gi"

# Horizontal pod autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Service configuration
service:
  type: ClusterIP
  port: 8083
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: task-service.taskmanager.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: task-service-tls
      hosts:
        - task-service.taskmanager.com

# Environment variables
env:
  SPRING_PROFILES_ACTIVE: prod
  JAVA_OPTS: >-
    -XX:+UseContainerSupport 
    -XX:MaxRAMPercentage=75.0 
    -XX:+HeapDumpOnOutOfMemoryError 
    -XX:HeapDumpPath=/dumps 
    -Djava.security.egd=file:/dev/./urandom
  SPRING_DATASOURCE_URL: jdbc:postgresql://task-db:5432/taskdb
  SPRING_REDIS_HOST: task-redis
  SPRING_REDIS_PORT: "6379"

# Persistence configuration
persistence:
  enabled: true
  storageClass: gp2
  size: 10Gi
  annotations:
    backup.velero.io/backup-volumes: task-data

# Liveness probe configuration
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8083
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  successThreshold: 1

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8083
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1