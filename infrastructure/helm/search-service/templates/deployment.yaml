apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "search-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "search-service.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: search
    app.kubernetes.io/version: {{ .Values.image.tag }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "search-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "search-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.monitoring.prometheus.port }}"
        prometheus.io/path: "{{ .Values.monitoring.prometheus.path }}"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "search-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: ELASTICSEARCH_HOSTS
              value: {{ .Values.elasticsearch.hosts | toJson | quote }}
            - name: ELASTICSEARCH_REQUEST_TIMEOUT
              value: {{ .Values.elasticsearch.requestTimeout | quote }}
            - name: ELASTICSEARCH_MAX_RETRIES
              value: {{ .Values.elasticsearch.maxRetries | quote }}
            - name: ELASTICSEARCH_SSL_ENABLED
              value: {{ .Values.elasticsearch.ssl.enabled | quote }}
            - name: ELASTICSEARCH_VERIFY_SSL
              value: {{ .Values.elasticsearch.ssl.verifySSL | quote }}
            - name: ELASTICSEARCH_INDEX_SHARDS
              value: {{ .Values.elasticsearch.indices.numberOfShards | quote }}
            - name: ELASTICSEARCH_INDEX_REPLICAS
              value: {{ .Values.elasticsearch.indices.numberOfReplicas | quote }}
            - name: ELASTICSEARCH_REFRESH_INTERVAL
              value: {{ .Values.elasticsearch.indices.refreshInterval }}
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: {{ .Values.elasticsearch.cluster.name }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.monitoring.healthCheck.livenessProbe.path | default "/health" }}
              port: http
            initialDelaySeconds: {{ .Values.monitoring.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.monitoring.healthCheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.monitoring.healthCheck.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.monitoring.healthCheck.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.monitoring.healthCheck.readinessProbe.path | default "/ready" }}
              port: http
            initialDelaySeconds: {{ .Values.monitoring.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.monitoring.healthCheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.monitoring.healthCheck.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.monitoring.healthCheck.readinessProbe.failureThreshold }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ template "search-service.name" . }}
                topologyKey: kubernetes.io/hostname
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}