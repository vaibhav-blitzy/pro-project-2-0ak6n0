apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "project-service.fullname" . }}
  labels:
    {{- include "project-service.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8082"
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "project-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "project-service.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8082"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "project-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
            - name: websocket
              containerPort: 8083
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.env.SPRING_PROFILES_ACTIVE | quote }}
            - name: SERVER_PORT
              value: {{ .Values.env.SERVER_PORT | quote }}
            - name: MANAGEMENT_SERVER_PORT
              value: {{ .Values.env.MANAGEMENT_SERVER_PORT | quote }}
            - name: JAVA_OPTS
              value: {{ .Values.env.JAVA_OPTS | quote }}
            - name: SPRING_SECURITY_REQUIRE_SSL
              value: {{ .Values.env.SPRING_SECURITY_REQUIRE_SSL | quote }}
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: {{ .Values.env.MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE | quote }}
            - name: MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED
              value: {{ .Values.env.MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED | quote }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "project-service.fullname" . }}-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "project-service.selectorLabels" . | nindent 18 }}
              topologyKey: "kubernetes.io/hostname"
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}